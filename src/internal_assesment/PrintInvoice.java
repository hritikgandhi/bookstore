/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internal_assesment;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author Hritik Gandhi
 */
public class PrintInvoice extends javax.swing.JFrame {

    /**
     * Creates new form PrintInvoice
     */
    String sel = "";
    Connection con;
    Statement st;
    ResultSet rs;
    public PrintInvoice() {
        initComponents();
        connect();
        FillCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StudentSelector = new javax.swing.JComboBox<>();
        SelectStudent = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        invoicenumber = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textComponent = new javax.swing.JTextArea();
        InvoiceSelector = new javax.swing.JComboBox<>();
        printInv = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        StudentSelector.setMaximumRowCount(500);
        StudentSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
        StudentSelector.setName(""); // NOI18N
        StudentSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentSelectorActionPerformed(evt);
            }
        });

        SelectStudent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SelectStudent.setText("Select Student :");

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/internal_assesment/back-icon.png"))); // NOI18N
        BackButton.setText("Go Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        invoicenumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoicenumber.setText("Select Invoice Number:");
        invoicenumber.setToolTipText("");

        textComponent.setEditable(false);
        textComponent.setColumns(20);
        textComponent.setRows(5);
        jScrollPane1.setViewportView(textComponent);

        InvoiceSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
        InvoiceSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceSelectorActionPerformed(evt);
            }
        });

        printInv.setText("Print Invoice");
        printInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printInvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StudentSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SelectStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(invoicenumber)
                                .addGap(0, 216, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(InvoiceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(printInv))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectStudent)
                    .addComponent(invoicenumber))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InvoiceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printInv))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(BackButton)
                .addContainerGap())
        );

        SelectStudent.getAccessibleContext().setAccessibleDescription("");
        SelectStudent.getAccessibleContext().setAccessibleParent(StudentSelector);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     public void connect()
    {
       try
       {
       
       con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\Hritik Gandhi\\OneDrive\\Netbeans\\Internal_Assesment\\db1.accdb");       
       st = con.createStatement();
       
       }
       catch(Exception ex)
       {
           
       }
    }
    private void FillCombo()
    {
        try
        {
           String sql = "select * from StudentDB";
           rs = st.executeQuery(sql);
           
           while(rs.next())
           {
               String name = rs.getString("Student");
               StudentSelector.addItem(name);
           }
        }
        catch(Exception e)
        {
            
        }
    }
    private void StudentSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentSelectorActionPerformed
      sel = StudentSelector.getSelectedItem().toString();
      // TODO add your handling code here:
       try
       {
        String sql = "SELECT * FROM Invoice";
        rs = st.executeQuery(sql);
        int t = 0;
        InvoiceSelector.removeAllItems();
        while(rs.next())
        {
            System.out.println("Enter");
            String stname = rs.getObject("StudentN").toString();
            System.out.println(sel +" - " + stname);
            if(stname.equalsIgnoreCase(sel))
            {
                t++;
                String num = rs.getObject("InvoiceID").toString();
                InvoiceSelector.addItem(num);
            } 
            else
            {
                //Blank Else Block
            }
        }
        if (t==0)
        {
            InvoiceSelector.addItem("-NA-");
        }
        System.out.println(t);
       }
       catch(Exception e)
               {
                   
               }
    }//GEN-LAST:event_StudentSelectorActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        
        MainUI.main();        
        setVisible(false); 
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_BackButtonActionPerformed

    private void InvoiceSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceSelectorActionPerformed
        
    }//GEN-LAST:event_InvoiceSelectorActionPerformed

    private void printInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printInvActionPerformed
try
        {
           textComponent.setText(null);   
           String sql = "select * from Invoice";
           rs = st.executeQuery(sql);
           String InvoiceID = "";
           String StudentN = "";
           String Book = "";
           String BID = "";
           String Price = "";
           String Qty = "";
           String total = "";
           String a = InvoiceSelector.getSelectedItem().toString();
           int t=0;
           while(rs.next())
           {
               InvoiceID = rs.getObject("InvoiceID").toString();
               if (a.equalsIgnoreCase(InvoiceID))
               {
                  t++;
                  StudentN = rs.getObject("StudentN").toString();
                  Book = rs.getObject("Book").toString();
                  BID = rs.getObject("BID").toString();                  
                  Qty = rs.getObject("Qty").toString();
                  Price = rs.getObject("Price").toString();
                  total = rs.getObject("total").toString();
               }
           }
           if (t!=0)
           {
           textComponent.append("Student Name"+"\t"+"---"+"\t"+StudentN+"\n\r");
           textComponent.append("Book"+"\t"+"---"+"\t"+Book+"\n\r");
           textComponent.append("Book ID"+"\t"+"---"+"\t"+BID+"\n\r");
           textComponent.append("Price"+"\t"+"---"+"\t"+"Rs."+Price+"\n\r");
           textComponent.append("Quantity"+"\t"+"---"+"\t"+Qty+"\n\r");
           textComponent.append("Total"+"\t"+"---"+"\t"+"Rs."+total+"\n\r");
           }
           else
           {
               textComponent.append("-NA-"+"\n\r");
           }
        }
        catch(Exception e)
        {
            //System.out.println(e);
            textComponent.append("Error Getting Values from InventoryDB..."+"\n\r");
        }  // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_printInvActionPerformed

    public static void main() {
        new PrintInvoice();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PrintInvoice().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JComboBox<String> InvoiceSelector;
    private javax.swing.JLabel SelectStudent;
    private javax.swing.JComboBox<String> StudentSelector;
    private javax.swing.JLabel invoicenumber;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printInv;
    private javax.swing.JTextArea textComponent;
    // End of variables declaration//GEN-END:variables
}
